openapi: 3.0.3
info:
  title: GitHub (mini) API for testing
  version: "1.0.0"
  description: Minimal OpenAPI spec containing 3 GitHub endpoints for testing.
servers:
  - url: https://api.github.com
    description: GitHub public API

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: token

  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        avatar_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        name:
          type: string
        company:
          type: string
        followers:
          type: integer
      required: [login, id]

    Owner:
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
      required: [login, id]

    Repository:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        full_name:
          type: string
        private:
          type: boolean
        owner:
          $ref: '#/components/schemas/Owner'
        html_url:
          type: string
          format: uri
        description:
          type: string
        forks_count:
          type: integer
        stargazers_count:
          type: integer
      required: [id, name, full_name, owner]

    Issue:
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        title:
          type: string
        body:
          type: string
        state:
          type: string
        html_url:
          type: string
          format: uri
      required: [id, number, title]

    NewIssue:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        assignees:
          type: array
          items:
            type: string
        labels:
          type: array
          items:
            type: string
      required: [title]

paths:
  /repos/{owner}/{repo}:
    get:
      summary: Get repository
      description: Get repository metadata for a given owner and repo.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Repository found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        "404":
          description: Not found

  /users/{username}:
    get:
      summary: Get user
      description: Get public profile for the specified user.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Not found

  /repos/{owner}/{repo}/issues:
    post:
      summary: Create issue
      description: Create a new issue in the specified repository. Requires authentication.
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewIssue'
      responses:
        "201":
          description: Issue created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
        "401":
          description: Unauthorized
