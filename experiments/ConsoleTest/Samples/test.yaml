openapi: 3.0.3
info:
  title: Test API for OpenApiClient
  version: "1.0.0"
  description: >
    Sample OpenAPI document to test OpenApiClient and OpenApiTool behavior.
servers:
  - url: https://api.example.com/{version}
    description: Primary API server with version variable
    variables:
      version:
        default: v1
        enum:
          - v1
          - v2

security:
  - ApiKeyHeader: []   # 전역 기본 보안 스킴 (optional)

paths:
  /pets:
    get:
      summary: List pets
      description: Returns a list of pets. tests query (primitive + array), header, cookie.
      parameters:
        - name: limit
          in: query
          description: Maximum number of pets to return
          required: false
          schema:
            type: integer
            format: int32
        - name: tags
          in: query
          description: Filter by tags (can supply multiple)
          required: false
          schema:
            type: array
            items:
              type: string
        - name: X-Client-Version
          in: header
          description: Client version (header)
          required: false
          schema:
            type: string
        - name: session_id
          in: cookie
          description: Session cookie
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK - array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      summary: Create a new pet
      description: Accepts application/json (preferred) or text/plain fallback.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
          text/plain:
            schema:
              type: string
      responses:
        "201":
          description: Created
      security:
        - BearerAuth: []       # operation-level security overrides/augments

  /pets/{petId}:
    get:
      summary: Get a pet by id
      parameters:
        - name: petId
          in: path
          required: true
          description: Pet identifier
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        "404":
          description: Not Found

  /owners/{ownerId}/pets:
    get:
      summary: List pets for an owner
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK

  /search:
    post:
      summary: Search with free-form object
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeFormObject'
      responses:
        "200":
          description: OK

components:
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      in: header
      name: X-API-KEY
    ApiKeyQuery:
      type: apiKey
      in: query
      name: api_key
    ApiKeyCookie:
      type: apiKey
      in: cookie
      name: token
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.example.com/oauth2/token
          scopes:
            read:pets: Read pets
            write:pets: Write pets

  schemas:
    Pet:
      type: object
      description: A pet in the system
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
          enum: [dog, cat, bird]
        age:
          type: integer
        metadata:
          $ref: '#/components/schemas/FreeFormObject'
        details:
          anyOf:
            - $ref: '#/components/schemas/Cat'
            - $ref: '#/components/schemas/Dog'
      required: [id, name]

    NewPet:
      allOf:
        - $ref: '#/components/schemas/PetBase'
        - type: object
          properties:
            ownerId:
              type: integer
      description: Model used when creating a pet

    PetBase:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
      required: [name]

    Cat:
      type: object
      properties:
        lives_left:
          type: integer

    Dog:
      type: object
      properties:
        bark_volume:
          type: number
          format: float

    FreeFormObject:
      type: object
      description: Arbitrary key-value bag (additionalProperties)
      additionalProperties:
        type: string

    ExampleOneOf:
      oneOf:
        - type: string
        - type: integer
